// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  hashedPassword String
  image         String?
  gender        String?
  phoneNumber   String?
  address       String?
  role          String @default("User")
  accounts      Account[]
  sessions      Session[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}

model Province{
  id String @id @default(cuid())
  name String
}


model Operator{
  id String @id @default(cuid())
  name String
  contact String
  address String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  buses Bus[]
}

model Type{
  id String @id @default(cuid())
  type String
  image String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bus Bus[]
}

model Bus{
  id String @id @default(cuid())
  number String
  operatorId String
  operator Operator @relation(fields: [operatorId] , references: [id])
  typeId String
  type Type @relation(fields: [typeId], references: [id])
  seat Int
  status String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  schedules Schedule[]

  @@index([operatorId,typeId])
}

model Route{
  id String @id @default(cuid())
  origin String
  destination String
  image_url String
  type String
  distance_km String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  schedules Schedule[]
}

model Schedule{
  id String @id @default(cuid())
  busId String
  bus Bus @relation(fields:[busId], references: [id])
  routeId String
  route Route @relation(fields: [routeId], references: [id])
  departure_time DateTime @db.Time()
  arrival_time DateTime @db.Time()
  price Decimal
  available_seat Int
  status String @default("Active")
  recurring   Boolean   @default(false)
  frequency       String    @default("daily")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([busId, routeId])
}